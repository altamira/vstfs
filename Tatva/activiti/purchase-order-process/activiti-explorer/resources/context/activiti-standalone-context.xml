<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       					http://www.springframework.org/schema/context 
       					http://www.springframework.org/schema/context/spring-context-3.1.xsd
       					http://www.springframework.org/schema/tx 
       					http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       					http://www.springframework.org/schema/jee 
       					http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       					http://www.springframework.org/schema/mvc  
       					http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ">
       
  <!-- This Spring config file is NOT used in Alfresco, as the Activiti engine is wired in a different way there -->
       
	<context:annotation-config />
       
  <bean id="demoDataGenerator" class="org.activiti.explorer.demo.DemoDataGenerator" init-method="init">
    <property name="processEngine" ref="processEngine" />
    
    <!-- Set following properties to false if certain demo data is not wanted -->
    <property name="createDemoUsersAndGroups" value="true" />
    <property name="createDemoProcessDefinitions" value="false" />
    <property name="createDemoModels" value="false" />
    <property name="generateReportData" value="false" />
  </bean>
  
  <bean id="dbProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:db.properties" />
    <!-- Allow other PropertyPlaceholderConfigurer to run as well -->
    <property name="ignoreUnresolvablePlaceholders" value="true" />
  </bean>
    
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <property name="accessToUnderlyingConnectionAllowed" value="true"/>
    <!-- <property name="defaultAutoCommit" value="false" /> -->
  </bean>

  <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	<property name="dataSource" ref="dataSource" />
  </bean> -->
  
  <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
	<property name="persistenceXmlLocations">
    	<list>
        	<value>classpath*:persistence.xml</value>
		</list>
	</property>
	<property name="defaultDataSource" ref="dataSource"/>
  </bean>
  
  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	<property name="persistenceUnitManager" ref="persistenceUnitManager"/>
	<property name="persistenceUnitName" value="pum" />
  </bean>
  
  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
  	<property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>
  
  <tx:annotation-driven transaction-manager="transactionManager" ></tx:annotation-driven>
  
  <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
  	<property name="databaseType" value="oracle" />
  	<property name="dataSource" ref="dataSource" />
  	<property name="transactionManager" ref="transactionManager" />
  	<property name="transactionsExternallyManaged" value="true" />
  	<property name="databaseSchemaUpdate" value="true" />
  	
  	<property name="jpaEntityManagerFactory" ref="entityManagerFactory" />
	<property name="jpaHandleTransaction" value="true" />
	<property name="jpaCloseEntityManager" value="true" />
  	
  	<property name="jobExecutorActivate" value="true" />
    <property name="customFormTypes">
      <list>
        <bean class="org.activiti.explorer.form.UserFormType"/>
        <bean class="org.activiti.explorer.form.ProcessDefinitionFormType"/> 
        <bean class="org.activiti.explorer.form.MonthFormType"/>
        <bean class="com.purchaseorder.customformtypes.ListFormType"/>
        
        <bean class="com.purchaseorder.customformtypes.LinksGroupFormType"/>
        
        <bean class="com.purchaseorder.customformtypes.ReportListFormType"/>
        
        <bean class="com.purchaseorder.customformtypes.TextAreaFormType" />
        
      </list>
    </property>
  </bean>
  
  <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" destroy-method="destroy">
  	<property name="processEngineConfiguration" ref="processEngineConfiguration" />
  </bean>
  
  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
  <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
  <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
  
  <bean id="activitiLoginHandler" class="org.activiti.explorer.ui.login.DefaultLoginHandler">
    <property name="identityService" ref="identityService" />
  </bean>
  
  <!-- Start - application specific beans -->
  
  <bean id="purchaseOrderDao" class="com.purchaseorder.dao.PurchaseOrderDao" />
  
  <bean id="reportGenerator" class="com.purchaseorder.service.ReportGeneratorService" >
  	<property name="purchaseOrderDao" ref="purchaseOrderDao"></property>
  </bean>
  
  <bean id="reportMail" class="com.purchaseorder.service.ReportMailService" />
  
  <bean id="processAttachments" class="com.purchaseorder.service.ProcessAttachments">
  	<constructor-arg>
  		<value>#{purchaseOrderDao.getAllXsd()}</value>
  	</constructor-arg>
  </bean>
  
  <bean id="mailboxProcessor" class="com.purchaseorder.service.PurchaseOrderMailboxProcessor">
  	<property name="purchaseOrderDao" ref="purchaseOrderDao"></property>
  	<property name="processAttachments" ref="processAttachments"></property>
  </bean>
  
  <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"/>
  
  <bean id="purchaseOrderMailboxService" class="com.purchaseorder.service.PurchaseOrderMailboxService">
  	<property name="mailboxProcessor" ref="mailboxProcessor"></property>
  	<property name="scheduler" ref="scheduler"></property>
  </bean>
  
  <!-- End - application specific beans -->
  
</beans>